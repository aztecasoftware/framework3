{"version":3,"sources":["kernel/entities.ts"],"names":[],"mappings":"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","file":"entities.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response, URLSearchParams } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { WebService } from './webapi';\r\nimport { Context } from './context';\r\nimport { SearchResult } from './search/search-result';\r\nimport { SearchRequest } from './search/search-request';\r\n//\r\nimport { CatalogOptions } from './custom/custom-catalog';\r\n\r\n//////////////////////////////// MODELS ////////////////////////////////////////////////////////////\r\n/**\r\n*Model básico de un catálogo\r\n*/\r\nexport abstract class CatalogInfo {\r\n    identity: number;\r\n    code: string;\r\n    active: boolean;\r\n    idBranch: number;\r\n    idCompany: number;\r\n    createDate: number;\r\n    lastUpdate: number;\r\n    pcUpdate: string;\r\n    userUpdate: number;\r\n    activateDate: number;\r\n    deactivateDate: number;\r\n    sessionID: string;\r\n\r\n    constructor() {\r\n        this.identity = 0;\r\n        this.code = '';\r\n    }\r\n}\r\n\r\n/*Interface básica para listados*/\r\nexport interface CatalogItem {\r\n    id: number;\r\n    codigo: string;\r\n    activo: boolean;\r\n    estatus?: string;\r\n    data?: any;\r\n}\r\n\r\n/**\r\n * Modelo básico de una estructura jerárquica\r\n */\r\nexport abstract class HierarchyInfo extends CatalogInfo {\r\n    nombre: string;\r\n    idPadre: number;\r\n    orden: number;\r\n    nivel: number;\r\n    path: string;\r\n    namedPath: string;\r\n}\r\n\r\n/**\r\n * Modelo básico de un documento con workflow\r\n */\r\nexport abstract class DocumentInfo<detail> {\r\n    identity: string;\r\n    fecha: Date;\r\n    idSucursal: number;\r\n    details: detail[];\r\n    //TODO: Faltan campos del workflow, se implementaran hasta su reestructura\r\n    createDate: number;\r\n    lastUpdate: number;\r\n    pcUpdate: string;\r\n    userUpdate: number;\r\n    activateDate: number;\r\n    deactivateDate: number;\r\n    sessionID: string;\r\n}\r\n\r\nexport abstract class DocumentDetail {\r\n    id: number;\r\n    state: number;\r\n}\r\n\r\n///////////////////////////////// INTERFACES ////////////////////////////////////////////////////////\r\n\r\n/**\r\n*Interface de servicios básicos para un catálogo\r\n*/\r\nexport interface ICatalogService<catalog extends CatalogInfo> {        \r\n\r\n    create() : Promise<catalog>;\r\n\r\n    getOptions(): Promise<CatalogOptions>;\r\n\r\n    update(info: catalog): Promise<catalog>;\r\n\r\n    getDetailByID(itemID: number): Promise<catalog>;\r\n\r\n    getDetailByCode(idBranch: number, code: string): Promise<catalog>;\r\n\r\n    getDetailFromCache(itemID: number): Promise<catalog>;\r\n\r\n    clone(itemID: number): Promise<catalog>;\r\n\r\n    delete(itemID: number): Promise<any>;\r\n\r\n    exists(itemID: number): Promise<boolean>;\r\n\r\n    changeStatus(itemID: Number, active: boolean): Promise<any>;\r\n\r\n    sync(lastUpdate: Date): Promise<any>;\r\n\r\n    search(idBranch: number, request: SearchRequest): Promise<SearchResult>;\r\n\r\n}\r\n\r\n\r\n/**\r\n * Interface de servicios básicos para una jerarquía\r\n*/\r\nexport interface IHierarchyService<hierarchy extends HierarchyInfo> extends ICatalogService<hierarchy> {\r\n    loadChildren(idCompany: number, idParent: number): Promise<hierarchy[]>;\r\n\r\n    moveNode(idNode: number, idTargetParent: number, order: number): Promise<any>;\r\n}\r\n\r\n///////////////////////////// SERVICES //////////////////////////////////////////////////////////////\r\n/**\r\n * Clase base para todos los servicios\r\n */\r\n@Injectable()\r\nexport abstract class BaseService {\r\n    apiService: WebService;\r\n\r\n    constructor(protected http: Http, protected context: Context, protected serviceUrl: string) {\r\n        if (this.context.session != null)\r\n            this.apiService = new WebService(http, serviceUrl, this.context.session.sessionID);\r\n        else\r\n            this.apiService = new WebService(http, serviceUrl);\r\n    }\r\n}\r\n\r\n/**\r\n * Clase base para servicios básicos de un catálogo\r\n */\r\n@Injectable()\r\nexport abstract class CatalogService<catalog extends CatalogInfo> extends BaseService implements ICatalogService<catalog> {    \r\n    options: CatalogOptions = null;\r\n\r\n    constructor(protected http: Http, protected context: Context, protected serviceUrl: string) {\r\n        super(http, context, serviceUrl);\r\n    }    \r\n\r\n    abstract create(): Promise<catalog>;\r\n\r\n    getOptions(): Promise<CatalogOptions> {\r\n        if (this.options == null) {\r\n            let params = new URLSearchParams();\r\n            return this.apiService.getData('get-options', params)\r\n                .map(response => {\r\n                    this.options = response.json();\r\n                    return this.options;\r\n                })\r\n                .toPromise();\r\n        }\r\n        else {\r\n            return Promise.resolve(this.options);\r\n        }\r\n    }\r\n\r\n    update(info: catalog): Promise<catalog> {\r\n        let params = new URLSearchParams();\r\n        return this.apiService.postData('update', params, info)\r\n            .map(response => {\r\n                return response.json() as catalog\r\n            })\r\n            .toPromise();        \r\n    }\r\n\r\n    getDetailByID(itemID: number): Promise<catalog> {\r\n        let params = new URLSearchParams();\r\n        params.set('itemID', itemID.toString());                \r\n        return this.apiService.getData('get-detail-id', params)\r\n            .map(response => {\r\n                return response.json() as catalog\r\n            })\r\n            .toPromise();        \r\n    }\r\n\r\n    getDetailByCode(idBranch: number, code: string): Promise<catalog> {\r\n        let params = new URLSearchParams();\r\n        params.set('idBranch', idBranch.toString());                \r\n        params.set('code', code);\r\n        return this.apiService.getData('get-detail-code', params)\r\n            .map(response => response.json() as catalog)\r\n            .toPromise();                \r\n    }\r\n\r\n    getDetailFromCache(itemID: number): Promise<catalog> {\r\n        let params = new URLSearchParams();\r\n        params.set('itemID', itemID.toString());\r\n        return this.apiService.getData('get-detail-cache', params)\r\n            .map(response => {\r\n                return response.json() as catalog\r\n            })\r\n            .toPromise();        \r\n    }\r\n\r\n    clone(itemID: number): Promise<catalog> {\r\n        let params = new URLSearchParams();\r\n        params.set('originalID', itemID.toString());\r\n        return this.apiService.getData('clone', params)\r\n            .map(response => {\r\n                return response.json() as catalog\r\n            })\r\n            .toPromise();        \r\n    }\r\n\r\n    delete(itemID: number): Promise<any> {\r\n        let params = new URLSearchParams();\r\n        params.set('itemID', itemID.toString());\r\n        return this.apiService.delete('delete', params)            \r\n            .toPromise();        \r\n    }\r\n\r\n    exists(itemID: number): Promise<boolean> {\r\n        return Promise.resolve(false);\r\n    }\r\n\r\n    changeStatus(itemID: Number, active: boolean): Promise<any> {\r\n        let params = new URLSearchParams();\r\n        params.set('itemID', itemID.toString());\r\n        params.set('active', active ? \"true\" : \"false\");\r\n        return this.apiService.postData('change-status', params, \"\")\r\n            .toPromise();        \r\n\r\n    }\r\n\r\n    sync(lastUpdate: Date): Promise<any> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    search(idBranch: number, request: SearchRequest): Promise<SearchResult> {\r\n        let params = new URLSearchParams();\r\n        params.set('idBranch', idBranch.toString());\r\n        return this.apiService.postData('search', params, request)\r\n            .map(response => {\r\n                return response.json() as SearchResult;\r\n            })\r\n            .toPromise();\r\n    }\r\n\r\n    protected handleError(error: any): Promise<any> {\r\n        console.error('An error occurred', error);\r\n        return Promise.reject(error.message || error);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport abstract class HierarchyService<hierarchy extends HierarchyInfo> extends BaseService implements IHierarchyService<hierarchy> {\r\n    \r\n    constructor(protected http: Http, protected context: Context, protected serviceUrl: string) {\r\n        super(http, context, serviceUrl);\r\n    }\r\n\r\n    abstract create(): Promise<hierarchy>;\r\n\r\n    getOptions(): Promise<CatalogOptions> {\r\n        let params = new URLSearchParams();\r\n        return this.apiService.getData('get-options', params)\r\n            .map(response => {\r\n                return response.json() as CatalogOptions\r\n            })\r\n            .toPromise();\r\n    }\r\n\r\n\r\n    update(info: hierarchy): Promise<hierarchy> {\r\n        return Promise.resolve(info);\r\n    }\r\n\r\n    getDetailByID(itemID: number): Promise<hierarchy> {\r\n        return this.create();\r\n    }\r\n\r\n    getDetailByCode(idBranch: number, code: string): Promise<hierarchy> {\r\n        return this.create();\r\n    }\r\n\r\n    getDetailFromCache(itemID: number): Promise<hierarchy> {\r\n        return this.create();\r\n    }\r\n\r\n    clone(itemID: number): Promise<hierarchy> {\r\n        let params = new URLSearchParams();\r\n        params.set('originalID', itemID.toString());\r\n        return this.apiService.getData('clone', params)\r\n            .map(response => {\r\n                return response.json() as hierarchy\r\n            })\r\n            .toPromise();\r\n    }\r\n\r\n\r\n    delete(itemID: number): Promise<any> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    exists(itemID: number): Promise<boolean> {\r\n        return Promise.resolve(false);\r\n    }\r\n\r\n    changeStatus(itemID: Number, active: boolean): Promise<any> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n\r\n    search(idBranch: number, request: SearchRequest): Promise<SearchResult> {\r\n        let params = new URLSearchParams();\r\n        params.set('idBranch', idBranch.toString());\r\n        return this.apiService.postData('search', params, request)\r\n            .map(response => {\r\n                return response.json() as SearchResult;\r\n            })\r\n            .toPromise();\r\n    }\r\n\r\n    sync(lastUpdate: Date): Promise<any> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    loadChildren(idCompany: number, idParent: number): Promise<hierarchy[]> {\r\n        return Promise.resolve([]);\r\n    }\r\n\r\n    moveNode(idNode: number, idTargetParent: number, order: number): Promise<any> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport abstract class DocumentService {\r\n}"]}