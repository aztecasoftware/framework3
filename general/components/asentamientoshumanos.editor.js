"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
//Frameworks
const core_1 = require("@angular/core");
const router_1 = require("@angular/router");
const forms_1 = require("@angular/forms");
const common_1 = require("@angular/common");
const wijmo_grid_1 = require("wijmo/wijmo.grid");
//Azteca Kernel
const index_1 = require("../../index");
const index_2 = require("../../controls/index");
const index_3 = require("../../editors/index");
//Features
const asentamientohumano_1 = require("../models/asentamientohumano");
const asentamientohumano_service_1 = require("../services/asentamientohumano.service");
const tipoasentamiento_service_1 = require("../services/tipoasentamiento.service");
let AsentamientosHumanosEditor = AsentamientosHumanosEditor_1 = class AsentamientosHumanosEditor extends index_3.CatalogEditor {
    //
    constructor(router, route, formBuilder, changeDetector, context, location, asentamientoHumanoService, tipoAsentamienotService) {
        super(context, changeDetector);
        this.router = router;
        this.route = route;
        this.formBuilder = formBuilder;
        this.changeDetector = changeDetector;
        this.context = context;
        this.location = location;
        this.asentamientoHumanoService = asentamientoHumanoService;
        this.tipoAsentamienotService = tipoAsentamienotService;
        this.asentamientohumano = new asentamientohumano_1.AsentamientoHumanoInfo();
        this.tiposAsentamiento = [];
        this.catalogForm = formBuilder.group({
            'codigo': ['', forms_1.Validators.required],
            'nombre': ['', forms_1.Validators.required],
            'poblacion': [0, index_2.AztecaValiators.selected],
            'cp': ['', forms_1.Validators.required]
        });
    }
    onConfigureCatalog(options) {
        this.autogeneratedCode = options.codigoAutogenerado;
    }
    onCreatingItem() {
    }
    ngAfterViewInit() {
        setTimeout(_ => this.loadTipoAsentamiento());
    }
    onViewingItem(id) {
        this.context.app.showSpinner();
        this.asentamientoHumanoService.getDetailByID(id)
            .then(info => {
            this.context.app.hideSpinner();
            this.asentamientohumano = info;
            this.setReadonlyMode();
        })
            .catch(error => this.handleError(error));
    }
    loadTipoAsentamiento() {
        this.tipoAsentamienotService.loadList()
            .then(tiposAsentamiento => {
            this.tiposAsentamiento = tiposAsentamiento;
            this.tiposAsentamiento.push({ id: 0, codigo: '0', nombre: '[NO SELECCIONADA]', activo: true });
            this.tiposAsentamientoMap = new wijmo_grid_1.DataMap(this.tiposAsentamiento, 'id', 'nombre');
        })
            .catch(error => this.handleError(error));
    }
    onCloningItem(id) {
        this.context.app.showSpinner();
        //
        this.asentamientoHumanoService.clone(id)
            .then(info => {
            this.context.app.hideSpinner();
            this.asentamientohumano = info;
        })
            .catch(error => this.handleError(error));
    }
    onLoadingItem(id) {
        this.context.app.showSpinner();
        this.asentamientoHumanoService.getDetailByID(id)
            .then(info => {
            this.context.app.hideSpinner();
            this.asentamientohumano = info;
        })
            .catch(error => this.handleError(error));
    }
    onSavingItem(args) {
        this.context.app.showSpinner();
        this.asentamientoHumanoService.update(this.asentamientohumano)
            .then(info => {
            this.context.app.hideSpinner();
            this.asentamientohumano = info;
            if (args.closeEditor)
                this.location.back();
            else
                this.showAlert('La información ha sido actualizada con éxito', 'success');
        })
            .catch(error => this.handleError(error));
    }
    callMethod(args) {
        console.log("Cambios de valor");
    }
    onSelectedPoblacon(item) {
        if (item != null) {
            this.asentamientohumano.idMunicipio = item.data.idMunicipio;
        }
    }
};
AsentamientosHumanosEditor = AsentamientosHumanosEditor_1 = __decorate([
    core_1.Component({
        selector: 'general-asentamientoshumanos-editor',
        template: `
      <form [formGroup]="catalogForm">

          <azteca-catalog-editor #catalogEditor 
                                 [title]="'AsentamientoHumano'"
                                 [info]="asentamientohumano"
                                 [valid]="catalogForm.valid"
                                 (configureCatalog)="onConfigureCatalog($event)"
                                 (creatingItem)="onCreatingItem()"
                                 (viewingItem)="onViewingItem($event)"
                                 (cloningItem)="onCloningItem($event)"
                                 (savingItem)="onSavingItem($event)"
                                 (loadingItem)="onLoadingItem($event)">

              <div class="row">
                  <div class="col-xs-10 col-md-10">
                      <azteca-form-field [label]="'Código:'">
                          <catalog-code formControlName="codigo" [(ngModel)]="asentamientohumano.code" [automatic]="autogeneratedCode"></catalog-code>
                      </azteca-form-field>

                      <azteca-form-field [label]="'Nombre:'">
                          <az-textbox formControlName="nombre" [(ngModel)]="asentamientohumano.nombre"></az-textbox>
                      </azteca-form-field>

                  </div>
              </div>
        
              <div class="row">
                  <div class="col-xs-10">
                      <tabset>
                          <tab heading="General">

                              <div class="row">
                                  <div class="col-xs-10 col-md-8">

                                      <azteca-form-field [label]="'Población:'">
                                          <poblacion-selector formControlName="poblacion" 
                                                              [(ngModel)]="asentamientohumano.idPoblacion"
                                                              (itemChanged)="onSelectedPoblacon($event)">
                                          </poblacion-selector>
                                      </azteca-form-field>

                                  </div>
                              </div>

                              <div class="row">
                                  <div class="col-xs-10 col-md-8">
                                      <label class="control-label">Tipo Asentamiento:</label>
                                      <wj-combo-box class="form-control"
                                                      [itemsSource]="tiposAsentamiento"
                                                      [selectedValuePath]="'id'"
                                                      [displayMemberPath]="'nombre'"
                                                      [(selectedValue)]="asentamientohumano.idTipoAsentamiento">
                                      </wj-combo-box>
                                  </div>
                              </div>

                              <div class="row">
                                  <div class="col-xs-5 col-md-4">
                                      <azteca-form-field [label]="'Código Postal:'">
                                          <az-textbox formControlName="cp" [(ngModel)]="asentamientohumano.codigoPostal"></az-textbox>
                                      </azteca-form-field>
                                  </div>
                              </div>

                          </tab>
                      </tabset>
                  </div>
              </div>
            

          </azteca-catalog-editor>
      </form>
    `,
        providers: [
            {
                provide: index_1.BaseComponent, useExisting: core_1.forwardRef(() => AsentamientosHumanosEditor_1)
            },
            {
                provide: index_1.CatalogService, useExisting: asentamientohumano_service_1.AsentamientoHumanoService
            }
        ]
    }),
    __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute, forms_1.FormBuilder, core_1.ChangeDetectorRef,
        index_1.Context, common_1.Location, asentamientohumano_service_1.AsentamientoHumanoService, tipoasentamiento_service_1.TipoAsentamientoService])
], AsentamientosHumanosEditor);
exports.AsentamientosHumanosEditor = AsentamientosHumanosEditor;
var AsentamientosHumanosEditor_1;
