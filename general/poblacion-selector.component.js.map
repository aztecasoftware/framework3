{"version":3,"sources":["kernel/general/poblacion-selector.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,sCAA2F;AAC3F,wCAAmD;AACnD,EAAE;AACF,sCAAqC;AACrC,iEAA+D;AAG/D,oDAAkD;AAElD,EAAE;AACF,yCAA8D;AAgB9D,IAAa,0BAA0B;IAAS,8CAAe;IAI3D,oCAAsB,OAAgB,EAAU,gBAAkC;QAAlF,YACI,kBAAM,OAAO,CAAC,SACjB;QAFqB,aAAO,GAAP,OAAO,CAAS;QAAU,sBAAgB,GAAhB,gBAAgB,CAAkB;QAFlF,kBAAY,GAAkB,IAAI,CAAC;;IAInC,CAAC;IAED,6CAAQ,GAAR,UAAS,MAAc;QAAvB,iBAeC;QAdG,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,MAAM,CAAC;iBACtC,IAAI,CAAC,UAAA,IAAI;gBACN,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC;gBACtE,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YACjC,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAAC;QACjD,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC;IACL,CAAC;IAED,6CAAQ,GAAR,UAAS,OAAsB;QAA/B,iBAYC;QAXG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAE/B,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,OAAO,CAAC;aACvE,IAAI,CAAC,UAAA,QAAQ;YACV,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;YAC/B,EAAE;YACF,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC;YACjC,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;YACpC,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;QACvC,CAAC,CAAC;aACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACjD,CAAC;IAEL,iCAAC;AAAD,CAvCA,AAuCC,CAvC+C,kCAAe,GAuC9D;AAvCY,0BAA0B;IAdtC,gBAAS,CAAC;QACP,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,QAAQ,EAAE,oBAAoB;QAC9B,WAAW,EAAE,qCAAqC;QAClD,SAAS,EAAE,CAAC;gBACR,OAAO,EAAE,8BAAa;gBACtB,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,4BAA0B,EAA1B,CAA0B,CAAC;aAC5D;YACD;gBACI,OAAO,EAAE,yBAAiB;gBAC1B,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,4BAA0B,EAA1B,CAA0B,CAAC;gBACzD,KAAK,EAAE,IAAI;aACd,CAAC;KACL,CAAC;qCAKiC,iBAAO,EAA4B,4BAAgB;GAJzE,0BAA0B,CAuCtC;AAvCY,gEAA0B","file":"poblacion-selector.component.js","sourcesContent":["import { Component, Input, Output, OnInit, EventEmitter, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\n//\r\nimport { Context } from '../context';\r\nimport { CatalogSelector } from '../controls/catalog-selector';\r\nimport { SearchRequest, SortOrder } from '../search/search-request';\r\nimport { CatalogItem } from '../entities';\r\nimport { BaseComponent } from '../base-component';\r\n\r\n//\r\nimport { PoblacionService, PoblacionInfo } from './geography';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'poblacion-selector',\r\n    templateUrl: './poblacion-selector.component.html',\r\n    providers: [{\r\n        provide: BaseComponent,\r\n        useExisting: forwardRef(() => PoblacionSelectorComponent)\r\n    },\r\n    {\r\n        provide: NG_VALUE_ACCESSOR, \r\n        useExisting: forwardRef(() => PoblacionSelectorComponent),\r\n        multi: true\r\n    }]\r\n})\r\nexport class PoblacionSelectorComponent extends CatalogSelector {\r\n    poblaciones: any[];\r\n    selectedItem: PoblacionInfo = null;\r\n\r\n    constructor(protected context: Context, private poblacionService: PoblacionService) {\r\n        super(context);\r\n    }\r\n\r\n    loadItem(itemID: number) {\r\n        if (itemID > 0) {\r\n            this.poblacionService.getDetailByID(itemID)\r\n                .then(info => {\r\n                    this.selectedItem = info;\r\n                    this.displayValue = info.nombre + \", \" + info.municipio.estado.nombre;\r\n                    this.propagateChange(itemID);\r\n                })\r\n                .catch(error => this.handleError(error));\r\n        }\r\n        else {\r\n            this.selectedItem = null;\r\n            this.displayValue = \"\";\r\n            this.propagateChange(0);\r\n        }\r\n    }\r\n\r\n    doSearch(request: SearchRequest) {\r\n        this.context.app.showSpinner();\r\n\r\n        this.poblacionService.search(this.context.app.defaultSite.identity, request)\r\n            .then(response => {\r\n                this.context.app.hideSpinner();\r\n                //\r\n                this.poblaciones = response.rows;\r\n                this.totalRows = response.totalRows;\r\n                this.pageIndex = request.pageIndex;\r\n            })\r\n            .catch(error => this.handleError(error));\r\n    }\r\n\r\n}\r\n\r\n"]}