"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
//Frameworks
const core_1 = require("@angular/core");
const router_1 = require("@angular/router");
const forms_1 = require("@angular/forms");
const common_1 = require("@angular/common");
//Azteca Kernel
const index_1 = require("../../index");
const index_2 = require("../../editors/index");
//Features
const ensamblado_service_1 = require("../services/ensamblado.service");
const ensamblado_1 = require("../models/ensamblado");
let EnsambladosEditor = EnsambladosEditor_1 = class EnsambladosEditor extends index_2.CatalogEditor {
    //
    constructor(router, route, formBuilder, changeDetector, context, location, ensambladoService) {
        super(context, changeDetector);
        this.router = router;
        this.route = route;
        this.formBuilder = formBuilder;
        this.changeDetector = changeDetector;
        this.context = context;
        this.location = location;
        this.ensambladoService = ensambladoService;
        this.ensamblado = new ensamblado_1.EnsambladoInfo();
        this.catalogForm = formBuilder.group({
            'codigo': ['', forms_1.Validators.required],
            'nombre': ['', forms_1.Validators.required],
            'ensamblado': ['', , forms_1.Validators.required]
        });
    }
    onConfigureCatalog(options) {
        this.autogeneratedCode = options.codigoAutogenerado;
    }
    onCreatingItem() {
    }
    onViewingItem(id) {
        this.context.app.showSpinner();
        this.ensambladoService.getDetailByID(id)
            .then(info => {
            this.context.app.hideSpinner();
            this.ensamblado = info;
            this.setReadonlyMode();
        })
            .catch(error => this.handleError(error));
    }
    onCloningItem(id) {
        this.context.app.showSpinner();
        //
        this.ensambladoService.clone(id)
            .then(info => {
            this.context.app.hideSpinner();
            this.ensamblado = info;
        })
            .catch(error => this.handleError(error));
    }
    onLoadingItem(id) {
        this.context.app.showSpinner();
        this.ensambladoService.getDetailByID(id)
            .then(info => {
            this.context.app.hideSpinner();
            this.ensamblado = info;
        })
            .catch(error => this.handleError(error));
    }
    onSavingItem(args) {
        this.context.app.showSpinner();
        this.ensambladoService.update(this.ensamblado)
            .then(info => {
            this.context.app.hideSpinner();
            this.ensamblado = info;
            if (args.closeEditor)
                this.location.back();
            else
                this.showAlert('La información ha sido actualizada con éxito', 'success');
        })
            .catch(error => this.handleError(error));
    }
};
EnsambladosEditor = EnsambladosEditor_1 = __decorate([
    core_1.Component({
        selector: 'custom-ensamblados-editor',
        template: `
      <form [formGroup]="catalogForm">

          <azteca-catalog-editor #catalogEditor 
                                 [title]="'Definición de ensamblado'"
                                 [info]="ensamblado"
                                 [valid]="catalogForm.valid"
                                 (configureCatalog)="onConfigureCatalog($event)"
                                 (creatingItem)="onCreatingItem()"
                                 (viewingItem)="onViewingItem($event)"
                                 (cloningItem)="onCloningItem($event)"
                                 (savingItem)="onSavingItem($event)"
                                 (loadingItem)="onLoadingItem($event)">

              <div class="row">
                  <div class="col-xs-10 col-md-10">
                      <azteca-form-field [label]="'Código:'">
                          <catalog-code formControlName="codigo" [(ngModel)]="ensamblado.code" [automatic]="autogeneratedCode"></catalog-code>
                      </azteca-form-field>

                      <azteca-form-field [label]="'Nombre:'">
                          <az-textbox formControlName="nombre" [(ngModel)]="ensamblado.nombre"></az-textbox>
                      </azteca-form-field>

                      <azteca-form-field [label]="'Ensamblado:'">
                          <az-textbox formControlName="ensamblado" [(ngModel)]="ensamblado.ensamblado"></az-textbox>
                      </azteca-form-field>

                  </div>
              </div>            

          </azteca-catalog-editor>
      </form>
    `,
        providers: [
            {
                provide: index_1.BaseComponent, useExisting: core_1.forwardRef(() => EnsambladosEditor_1)
            },
            {
                provide: index_1.CatalogService, useExisting: ensamblado_service_1.EnsambladoService
            }
        ]
    }),
    __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute, forms_1.FormBuilder, core_1.ChangeDetectorRef,
        index_1.Context, common_1.Location, ensamblado_service_1.EnsambladoService])
], EnsambladosEditor);
exports.EnsambladosEditor = EnsambladosEditor;
var EnsambladosEditor_1;
