{"version":3,"sources":["../../Scripts/app/kernel/security/sucursales.editor.ts"],"names":[],"mappings":"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","file":"sucursales.editor.js","sourcesContent":["import { Component, OnInit, ViewChild, Input, forwardRef } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\n//\r\nimport { Context } from '../context';\r\nimport { AztecaValiators } from '../controls/validators';\r\nimport { CatalogEditor } from '../editors/catalog-editor';\r\nimport { EditorEventArgs } from '../editors/editor-event-args';\r\nimport { SearchRequest, SearchCondition } from '../search/search-request';\r\nimport { BaseComponent } from '../base-component';\r\n//\r\nimport { CatalogService } from '../entities';\r\nimport { CatalogOptions } from '../custom/custom-catalog';\r\nimport { SucursalInfo, SucursalService } from './sucursal';\r\nimport { EmpresaService } from './empresa'\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'azteca-sucursales-editor',\r\n    templateUrl: './sucursales.editor.html',\r\n    providers: [\r\n        {\r\n            provide: BaseComponent, useExisting: forwardRef(() => SucursalesEditor)\r\n        },\r\n        {\r\n            provide: CatalogService, useExisting: SucursalService\r\n        }\r\n    ]\r\n})\r\nexport class SucursalesEditor extends CatalogEditor {\r\n    sucursal: SucursalInfo = new SucursalInfo();\r\n    idEmpresa: number;\r\n\r\n    constructor(protected context: Context, private router: Router, private route: ActivatedRoute, private location: Location, formBuilder: FormBuilder,\r\n         private sucursalService: SucursalService, private empresaService: EmpresaService) {\r\n\r\n        super(context);\r\n\r\n        this.catalogForm = formBuilder.group({\r\n            'codigo': ['', Validators.required],\r\n            'nombre': ['', Validators.required],\r\n            'nombreLargo':[''],\r\n            'calle': [''],\r\n            'numExt': [''],\r\n            'numInt': [''],\r\n            'colonia': [''],\r\n            'cp': [''],\r\n            'poblacion': [0],\r\n            'telefono1': [''],\r\n            'telefono2': [''],\r\n            'fax': [''],\r\n            'paginaWeb': [''],\r\n            'correo': ['']\r\n        });\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.forEach((params: Params) => {\r\n            this.idEmpresa = +params['idEmpresa'];\r\n        });        \r\n    }\r\n\r\n    onConfigureCatalog(options: CatalogOptions) {\r\n        this.autogeneratedCode = options.codigoAutogenerado;\r\n    }\r\n\r\n    onCreatingItem() {\r\n        //Asignar y cargar datos de la empresa que dependerá la sucursal\r\n        this.sucursal.idCompany = this.idEmpresa;\r\n\r\n        this.empresaService.getDetailFromCache(this.idEmpresa)\r\n            .then(empresa => this.sucursal.empresa = empresa)\r\n            .catch(error => this.handleError(error));\r\n    }\r\n\r\n    onViewingItem(id: number) {\r\n        this.context.app.showSpinner();\r\n\r\n        this.sucursalService.getDetailByID(id)\r\n            .then(info => {\r\n                this.context.app.hideSpinner();\r\n                this.sucursal = info;                \r\n                this.setReadonlyMode();\r\n            })\r\n            .catch(error => this.handleError(error));\r\n    }\r\n\r\n    onCloningItem(id: number) {\r\n        this.context.app.showSpinner();\r\n        //\r\n        this.sucursalService.clone(id)\r\n            .then(info => {\r\n                this.context.app.hideSpinner();\r\n                this.sucursal = info;\r\n            })\r\n            .catch(error => this.handleError(error));\r\n    }\r\n\r\n    onLoadingItem(id: number) {\r\n        this.context.app.showSpinner();\r\n\r\n        this.sucursalService.getDetailByID(id)\r\n            .then(info => {\r\n                this.context.app.hideSpinner();\r\n                this.sucursal = info;                \r\n            })\r\n            .catch(error => this.handleError(error));\r\n    }\r\n\r\n    onSavingItem(args: EditorEventArgs) {\r\n        this.context.app.showSpinner();\r\n        this.sucursalService.update(this.sucursal)\r\n            .then(info => {\r\n                this.context.app.hideSpinner();\r\n                this.sucursal = info;                \r\n                if (args.closeEditor)\r\n                    this.location.back();\r\n                else\r\n                    this.showAlert('La información ha sido actualizada con éxito', 'success');\r\n            })\r\n            .catch(error => this.handleError(error));\r\n    }\r\n\r\n    //Manejo de miembros\r\n    selectMiembrosTab() {\r\n\r\n    }\r\n\r\n}"]}