{"version":3,"sources":["kernel/security/grupo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,YAAY;AACZ,sCAA2C;AAC3C,sCAAyE;AAEzE,uCAAqC;AACrC,eAAe;AACf,sCAAqC;AACrC,wCAAuE;AAIvE;IAA+B,6BAAW;IAGtC;eACI,iBAAO;IACX,CAAC;IACL,gBAAC;AAAD,CANA,AAMC,CAN8B,sBAAW,GAMzC;AANY,8BAAS;AAStB;IAAA;IAMA,CAAC;IAAD,gBAAC;AAAD,CANA,AAMC,IAAA;AANY,8BAAS;AAUtB,IAAa,YAAY;IAAS,gCAAyB;IAEvD,sBAAY,IAAU,EAAE,OAAgB;eACpC,kBAAM,IAAI,EAAE,OAAO,EAAE,4BAA4B,CAAC;IACtD,CAAC;IAED,6BAAM,GAAN;QACI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,iCAAU,GAAV,UAAW,OAAe;QACtB,IAAI,MAAM,GAAoB,IAAI,sBAAe,EAAE,CAAC;QACpD,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC;aAChD,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAmB,EAAhC,CAAgC,CAAC;aACjD,SAAS,EAAE,CAAC;IACrB,CAAC;IACL,mBAAC;AAAD,CAjBA,AAiBC,CAjBiC,yBAAc,GAiB/C;AAjBY,YAAY;IADxB,iBAAU,EAAE;qCAGS,WAAI,EAAW,iBAAO;GAF/B,YAAY,CAiBxB;AAjBY,oCAAY","file":"grupo.js","sourcesContent":["//Frameworks\r\nimport { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response, URLSearchParams } from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/toPromise';\r\n//Azteca Kernel\r\nimport { Context } from '../context';\r\nimport { CatalogInfo, CatalogItem, CatalogService } from '../entities';\r\n//Locales\r\nimport { UsuarioItem } from './usuario';\r\n\r\nexport class GrupoInfo extends CatalogInfo {\r\n    nombre: string;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\n\r\n\r\nexport class GrupoItem implements CatalogItem {\r\n    id: number;\r\n    codigo: string;\r\n    nombre: string;\r\n    activo: boolean;\r\n    estatus?: string;\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class GrupoService extends CatalogService<GrupoInfo> {\r\n\r\n    constructor(http: Http, context: Context) {\r\n        super(http, context, 'api/kernel/security/grupos');\r\n    }\r\n\r\n    create(): Promise<GrupoInfo> {\r\n        return Promise.resolve(new GrupoInfo());\r\n    }\r\n\r\n    getMembers(idGrupo: number): Promise<UsuarioItem[]> {\r\n        let params: URLSearchParams = new URLSearchParams();\r\n        params.set('idGrupo', idGrupo.toString());\r\n        return this.apiService.getData('get-members', params)\r\n            .map(response => response.json() as UsuarioItem[])\r\n            .toPromise();\r\n    }\r\n}"]}