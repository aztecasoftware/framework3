{"version":3,"sources":["kernel/security/usuario.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,sCAA2C;AAC3C,sCAAyE;AAEzE,uCAAqC;AACrC,EAAE;AACF,sCAAqC;AACrC,oCAAuC;AACvC,wCAAuE;AAMvE,yFAAyF;AACzF;IAAiC,+BAAW;IAA5C;;IAKA,CAAC;IAAD,kBAAC;AAAD,CALA,AAKC,CALgC,sBAAW,GAK3C;AALY,kCAAW;AAOxB;IAAA;IAMA,CAAC;IAAD,kBAAC;AAAD,CANA,AAMC,IAAA;AANY,kCAAW;AAQxB,2FAA2F;AAE3F,IAAa,cAAc;IAAS,kCAA2B;IAC3D,wBAAY,IAAU,EAAE,OAAgB;eACpC,kBAAM,IAAI,EAAE,OAAO,EAAE,8BAA8B,CAAC;IACxD,CAAC;IAED,+BAAM,GAAN;QACI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,WAAW,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,8BAAK,GAAL,UAAM,QAAgB,EAAE,QAAgB,EAAE,WAAmB;QAA7D,iBAaC;QAZG,IAAI,MAAM,GAAG,IAAI,sBAAe,EAAE,CAAC;QACnC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QACjC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QACjC,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;aAC1C,GAAG,CAAC,UAAA,QAAQ;YACT,IAAI,OAAO,GAAgB,QAAQ,CAAC,IAAI,EAAiB,CAAC;YAC1D,EAAE,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC;gBAChB,KAAI,CAAC,UAAU,GAAG,IAAI,mBAAU,CAAC,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,UAAU,GAAG,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;YAC3F,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC,CAAC;aACD,SAAS,EAAE,CAAC;IACrB,CAAC;IACL,qBAAC;AAAD,CAvBA,AAuBC,CAvBmC,yBAAc,GAuBjD;AAvBY,cAAc;IAD1B,iBAAU,EAAE;qCAES,WAAI,EAAW,iBAAO;GAD/B,cAAc,CAuB1B;AAvBY,wCAAc","file":"usuario.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response, URLSearchParams } from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/toPromise';\r\n//\r\nimport { Context } from '../context';\r\nimport { WebService } from '../webapi';\r\nimport { CatalogInfo, CatalogItem, CatalogService } from '../entities';\r\n//\r\nimport { SessionInfo } from './session';\r\nimport { EmpresaInfo, EmpresaItem } from './empresa';\r\nimport { SucursalInfo, SucursalItem } from './sucursal';\r\n\r\n//////////////////////////// MODELS /////////////////////////////////////////////////////\r\nexport class UsuarioInfo extends CatalogInfo {\r\n    idPersona: number;\r\n    password: string;\r\n    empresas: EmpresaItem[];\r\n    sucursales: SucursalItem[];\r\n}\r\n\r\nexport class UsuarioItem implements CatalogItem {\r\n    id: number;\r\n    codigo: string;\r\n    nombre: string;\r\n    activo: boolean;\r\n    estatus?: string;\r\n}\r\n\r\n//////////////////////////// SERVICES /////////////////////////////////////////////////////\r\n@Injectable()\r\nexport class UsuarioService extends CatalogService<UsuarioInfo>{\r\n    constructor(http: Http, context: Context) {\r\n        super(http, context, \"api/kernel/security/usuarios\");\r\n    }\r\n\r\n    create(): Promise<UsuarioInfo> {        \r\n        return Promise.resolve(new UsuarioInfo());\r\n    }\r\n\r\n    login(userName: string, password: string, workStation: string): Promise<SessionInfo> {\r\n        let Params = new URLSearchParams();\r\n        Params.set('userName', userName);\r\n        Params.set('password', password);\r\n        Params.set('workstation', workStation);\r\n        return this.apiService.getData(\"login\", Params)\r\n            .map(response => {\r\n                let session: SessionInfo = response.json() as SessionInfo;\r\n                if (session != null)\r\n                    this.apiService = new WebService(this.http, this.serviceUrl + \"/\" + session.sessionID);\r\n                return session;\r\n            })\r\n            .toPromise();\r\n    }\r\n}"]}