{"version":3,"sources":["../../Scripts/app/kernel/controls/catalog-selector.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,sCAAsC;AAItC,+CAA6C;AAI7C;IAA8C,mCAAW;IAkBrD,yBAAsB,OAAgB;QAAtC,YACI,iBAAO,SACV;QAFqB,aAAO,GAAP,OAAO,CAAS;QAjB5B,iBAAW,GAAW,CAAC,CAAC;QAClC,kBAAY,GAAW,EAAE,CAAC;QAC1B,eAAS,GAAW,CAAC,CAAC;QACtB,cAAQ,GAAW,EAAE,CAAC;QACtB,eAAS,GAAW,CAAC,CAAC;QAuBtB,qBAAe,GAAG,UAAC,CAAM,IAAO,CAAC,CAAC;;IARlC,CAAC;IAZD,sBAAI,uCAAU;aAAd;YACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;aACD,UAAe,KAAa;YACxB,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;gBACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACpC,CAAC;QACL,CAAC;;;OANA;IAcD,oCAAU,GAAV,UAAW,KAAU;QACjB,IAAI,CAAC,UAAU,GAAG,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;IACxC,CAAC;IAID,0CAAgB,GAAhB,UAAiB,EAAO;QACpB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC9B,CAAC;IAED,2CAAiB,GAAjB,cAAsB,CAAC;IAEvB,qCAAW,GAAX,UAAY,MAAW;QACnB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IAED,4CAAkB,GAAlB,UAAmB,IAAiB;QAChC,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC;YACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI;YACA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IAEL,sBAAC;AAAD,CA/CA,AA+CC,CA/C6C,0BAAW,GA+CxD;AAvCG;IADC,YAAK,EAAE;;;iDAGP;AAViB,0CAAe","file":"catalog-selector.js","sourcesContent":["import { Input } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { Context } from '../context';\r\nimport { CatalogItem } from '../entities';\r\nimport { BaseControl } from './base-control';\r\nimport { BaseComponent } from '../base-component';\r\nimport { Policies } from '../security/policies';\r\n\r\nexport abstract class CatalogSelector extends BaseControl implements ControlValueAccessor {\r\n    protected _selectedID: number = 0;\r\n    displayValue: string = \"\";\r\n    pageIndex: number = 0;\r\n    pageSize: number = 20;\r\n    totalRows: number = 0;\r\n\r\n    @Input()\r\n    get selectedID(): number {\r\n        return this._selectedID;\r\n    }\r\n    set selectedID(value: number) {\r\n        if (value != this._selectedID) {\r\n            this._selectedID = value ? value : 0;\r\n            this.loadItem(this._selectedID);            \r\n        }\r\n    }\r\n\r\n    constructor(protected context: Context) {\r\n        super();\r\n    }\r\n\r\n    abstract loadItem(itemID: number): void;\r\n\r\n    writeValue(value: any) {\r\n        this.selectedID = value ? value : 0;\r\n    }\r\n\r\n    propagateChange = (_: any) => { };\r\n\r\n    registerOnChange(fn: any) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    registerOnTouched() { }\r\n\r\n    handleError(reason: any) {\r\n        this.context.app.hideSpinner();\r\n    }\r\n\r\n    itemChangedHandler(item: CatalogItem) {\r\n        if (item != null)\r\n            this.loadItem(item.id);\r\n        else\r\n            this.loadItem(0);\r\n    }\r\n\r\n}"]}