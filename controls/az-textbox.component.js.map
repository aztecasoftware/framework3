{"version":3,"sources":["../../Scripts/app/kernel/controls/az-textbox.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,sCAA4H;AAC5H,wCAA0F;AAC1F,EAAE;AACF,+CAA6C;AAC7C,oDAAkD;AAgBlD,IAAa,kBAAkB;IAAS,sCAAW;IAO/C,4BAAoB,QAAkB;QAAtC,YACI,iBAAO,SACV;QAFmB,cAAQ,GAAR,QAAQ,CAAU;QALtC,EAAE;QACQ,iBAAW,GAAyB,IAAI,mBAAY,EAAU,CAAC;QAkBzE,qBAAe,GAAG,UAAC,CAAM,IAAO,CAAC,CAAC;;IAZlC,CAAC;IAED,0CAAa,GAAb,UAAc,IAAS;QACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;IAED,yCAAyC;IACzC,uCAAU,GAAV,UAAW,KAAU;QACjB,IAAI,CAAC,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC;IACnC,CAAC;IAID,6CAAgB,GAAhB,UAAiB,EAAO;QACpB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC9B,CAAC;IAED,8CAAiB,GAAjB,cAAsB,CAAC;IAE3B,yBAAC;AAAD,CA7BA,AA6BC,CA7BuC,0BAAW,GA6BlD;AA5BY;IAAR,YAAK,EAAE;;gDAAc;AAEZ;IAAT,aAAM,EAAE;8BAAc,mBAAY;uDAAsC;AAEnD;IAArB,gBAAS,CAAC,SAAS,CAAC;8BAAU,iBAAU;mDAAC;AALjC,kBAAkB;IAb9B,gBAAS,CAAC;QACP,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,QAAQ,EAAE,YAAY;QACtB,WAAW,EAAE,6BAA6B;QAC1C,SAAS,EAAE;YACP;gBACI,OAAO,EAAE,8BAAa,EAAE,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,oBAAkB,EAAlB,CAAkB,CAAC;aAC5E;YACD;gBACI,OAAO,EAAE,yBAAiB,EAAE,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,oBAAkB,EAAlB,CAAkB,CAAC,EAAE,KAAK,EAAE,IAAI;aAC7F;SACJ;KACJ,CAAC;qCAQgC,eAAQ;GAP7B,kBAAkB,CA6B9B;AA7BY,gDAAkB","file":"az-textbox.component.js","sourcesContent":["import { Component, Input, Output, EventEmitter, ViewChild, forwardRef, Renderer, ElementRef, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor, FormControlName, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n//\r\nimport { BaseControl } from './base-control';\r\nimport { BaseComponent } from '../base-component';\r\nimport { Policies } from '../security/policies';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'az-textbox',\r\n    templateUrl: './az-textbox.component.html',    \r\n    providers: [\r\n        {\r\n            provide: BaseComponent, useExisting: forwardRef(() => AzTextboxComponent)\r\n        },\r\n        {\r\n            provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AzTextboxComponent), multi: true\r\n        }\r\n    ]\r\n})\r\nexport class AzTextboxComponent extends BaseControl implements ControlValueAccessor {    \r\n    @Input() text: string;\r\n    //\r\n    @Output() textChanged: EventEmitter<string> = new EventEmitter<string>();\r\n    //\r\n    @ViewChild('textbox') textbox: ElementRef;\r\n    \r\n    constructor(private renderer: Renderer) {\r\n        super();\r\n    }\r\n\r\n    onTextChanged(args: any) {\r\n        this.textChanged.next(args.target.value);\r\n        this.propagateChange(args.target.value);\r\n    }\r\n\r\n    //ImplementaciÃ³n de control value accesor\r\n    writeValue(value: any) {\r\n        this.text = value ? value : '';\r\n    }\r\n\r\n    propagateChange = (_: any) => { };\r\n\r\n    registerOnChange(fn: any) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    registerOnTouched() { }\r\n\r\n}"]}