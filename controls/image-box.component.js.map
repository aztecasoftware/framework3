{"version":3,"sources":["../../Scripts/app/kernel/controls/image-box.component.ts"],"names":[],"mappings":"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","file":"image-box.component.js","sourcesContent":["import { Component, Input, Output, EventEmitter, ViewChild, ContentChild, forwardRef, SimpleChange, OnChanges, Renderer, ElementRef } from '@angular/core';\r\nimport { ControlValueAccessor, FormControlName, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n//\r\nimport { BaseControl } from './base-control';\r\nimport { BaseComponent } from '../base-component';\r\nimport { FileInfo } from '../general/file';\r\nimport { Context } from '../context';\r\nimport { Policies } from '../security/policies';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'azteca-image-box',\r\n    templateUrl: './image-box.component.html',    \r\n    providers: [{\r\n        provide: BaseComponent,\r\n        useExisting: forwardRef(() => ImageBoxComponent)\r\n    },\r\n    {\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => ImageBoxComponent),\r\n        multi: true\r\n    }]\r\n\r\n})\r\nexport class ImageBoxComponent extends BaseControl implements ControlValueAccessor {\r\n    readonly allowedExtensions:string[] = [\"jpg\", \"bmp\", \"png\", \"gif\", \"jpeg\"];\r\n    defaultImage: string = this.context.kernelImagesPath + \"camera.png\";\r\n    imageSrc: string = this.defaultImage;\r\n    //\r\n    @Input() imageFile: FileInfo;\r\n    //\r\n    @Output() fileChanged: EventEmitter<FileInfo> = new EventEmitter<FileInfo>();\r\n    //\r\n    @ViewChild('fileInput') fileInput: ElementRef;    \r\n\r\n    constructor(private renderer: Renderer, private context: Context) {\r\n        super();\r\n    }\r\n\r\n    private validExtension(extension: string): boolean {\r\n        let valid = false;\r\n        this.allowedExtensions.forEach(validExt => {\r\n            if (extension.toLowerCase().trim() == validExt){\r\n                valid = true;\r\n                return false;\r\n            }\r\n        });\r\n        return valid;\r\n    }\r\n\r\n    private updateImageSrc() {\r\n        if (this.imageFile && (this.imageFile.content || this.imageFile.fileUri != '')) {\r\n            if (this.imageFile.fileUri=='')\r\n                this.imageSrc = this.imageFile.content;\r\n            else\r\n                this.imageSrc = this.context.fileServerPath + this.imageFile.fileUri;\r\n        }            \r\n        else\r\n            this.imageSrc = this.defaultImage;\r\n    }\r\n\r\n    ngOnChanges(changes: { [key: string]: SimpleChange }) {\r\n        if (changes['imageFile']) {\r\n            this.updateImageSrc();\r\n        }\r\n    }\r\n\r\n\r\n    private fileChangedHandler(e: any) {\r\n        let self = this;\r\n        \r\n        let selectedFile: File = this.fileInput.nativeElement.files[0];\r\n        if (this.fileInput.nativeElement.files && this.fileInput.nativeElement.files[0]) {\r\n            let info: FileInfo = new FileInfo();\r\n            info.contentType = 'images';\r\n            info.originalFileName = selectedFile.name;\r\n            // Obtener extensión del archivo\r\n            let pointIndex: number = info.originalFileName.lastIndexOf('.');\r\n            if (pointIndex >= 0) {\r\n                info.extension = info.originalFileName.substring(pointIndex + 1);\r\n            }\r\n            if (this.validExtension(info.extension)) {\r\n                let reader: FileReader = new FileReader();\r\n                reader.onload = (args: any) => {\r\n                    info.content = args.target.result;\r\n                    this.imageFile = info;\r\n                    self.fileChanged.next(info);\r\n                    this.propagateChange(info);\r\n                    self.updateImageSrc();\r\n                };\r\n                reader.readAsDataURL(selectedFile);\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    selectFile() {        \r\n        let event = new MouseEvent('click', { bubbles: true });\r\n        this.renderer.invokeElementMethod(this.fileInput.nativeElement, 'dispatchEvent', [event]);         \r\n    }\r\n\r\n    removeFile() {\r\n        this.fileChanged.next(null);\r\n        this.propagateChange(null);\r\n        this.imageFile = null;\r\n        this.updateImageSrc();\r\n    }\r\n\r\n    //Implementación de control value accesor\r\n    writeValue(value: any) {\r\n        this.imageFile = value ? value : null;\r\n        this.updateImageSrc();\r\n    }\r\n\r\n    propagateChange = (_: any) => { };\r\n\r\n    registerOnChange(fn: any) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    registerOnTouched() { }\r\n\r\n}\r\n"]}