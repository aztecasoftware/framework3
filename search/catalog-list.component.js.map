{"version":3,"sources":["../../Scripts/app/kernel/search/catalog-list.component.ts"],"names":[],"mappings":"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","file":"catalog-list.component.js","sourcesContent":["import { Component, EventEmitter, Input, Output, ViewChild, OnInit, AfterViewInit, ContentChildren, ContentChild, QueryList, forwardRef, ChangeDetectionStrategy } from '@angular/core';\r\n//\r\nimport { CollectionView, EventArgs, DataType } from 'wijmo/wijmo';\r\nimport { FlexGrid, HitTestInfo, CellRange, CellType, Column, CellRangeEventArgs } from 'wijmo/wijmo.grid';\r\nimport { FlexGridFilter, FilterType, ColumnFilter, Operator } from 'wijmo/wijmo.grid.filter';\r\nimport { Menu } from 'wijmo/wijmo.input';\r\n//\r\nimport { Context } from '../context';\r\nimport { SearchRequest, SortOrder } from './search-request';\r\nimport { GridColumn } from '../utils/grid-column';\r\nimport { MenuItem } from '../utils/menu-item';\r\nimport { GridFilter } from '../utils/grid-filter';\r\nimport { CatalogItem } from '../entities';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'azteca-catalog-list',\r\n    templateUrl: './catalog-list.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CatalogListComponent {        \r\n    private _emptyFilter: string = \"{\\\"defaultFilterType\\\":3, \\\"filters\\\":[]}\";\r\n    private _catalogList: CatalogItem[] = [];\r\n    private _currentFilter: string = this._emptyFilter;\r\n    private _currentSortedColumn: number = -1;\r\n    private _currentSortOrder: string;\r\n    private _pageSize: number = 20;\r\n    private _serverSice: boolean = true;\r\n    //\r\n    currentItem: CatalogItem = null;\r\n    catalogView: CollectionView = new CollectionView();\r\n    get pageCount(): number {\r\n        if (this.serverSide)\r\n            return Math.ceil(this.totalRows / this.pageSize);\r\n        else\r\n            return this.catalogView.pageCount;\r\n    }\r\n    //\r\n    @ContentChildren(GridColumn) columns: QueryList<GridColumn>;\r\n    @ViewChild('filter') filter: FlexGridFilter;\r\n    @ViewChild('grid') grid: FlexGrid;\r\n    @ViewChild('ctxMenu') contextMenu: Menu;        \r\n    //\r\n    @Input() enabled: boolean = true;\r\n    @Input()\r\n    get catalogList(): CatalogItem[] {\r\n        return this._catalogList;\r\n    }\r\n    set catalogList(value: CatalogItem[]) {\r\n        if (value) {\r\n            this._catalogList = value;\r\n            this.catalogView.sourceCollection = value;\r\n            this.catalogView.moveCurrentToFirst();\r\n            if (this.catalogView.currentItem != null) {\r\n                this.currentItem = { id: this.catalogView.currentItem.id, codigo: this.catalogView.currentItem.codigo, activo: this.catalogView.currentItem.activo, estatus: this.catalogView.currentItem.estatus, data: this.catalogView.currentItem };\r\n                this.currentItemChanged.next(this.currentItem);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Input() contextMenuItems: MenuItem[]=[];\r\n    @Input() pageIndex: number;\r\n    @Input()\r\n    get pageSize(): number {\r\n        return this._pageSize;\r\n    }\r\n\r\n    set pageSize(value: number) {\r\n        this._pageSize = value;\r\n        this.catalogView.pageSize = value;\r\n    }\r\n        \r\n    @Input()\r\n    get serverSide(): boolean {\r\n        return this._serverSice;\r\n    }\r\n    set serverSide(value: boolean) {\r\n        this._serverSice = value;\r\n        if (this.filter) {\r\n            this.setFilterType();\r\n        }\r\n    }\r\n    @Input() totalRows: number = 0;\r\n    //\r\n    @Output() searchRequested: EventEmitter<SearchRequest> = new EventEmitter<SearchRequest>();    \r\n    @Output() contextMenuClick: EventEmitter<MenuItem> = new EventEmitter<MenuItem>();\r\n    @Output() currentItemChanged: EventEmitter<CatalogItem> = new EventEmitter<CatalogItem>();\r\n    @Output() itemSelected: EventEmitter<CatalogItem> = new EventEmitter<CatalogItem>();\r\n    @Output() contextMenuOpen: EventEmitter<CatalogItem> = new EventEmitter<CatalogItem>();\r\n\r\n    private setFilterType() {\r\n        if (this._serverSice) {\r\n            this.filter.defaultFilterType = FilterType.Condition;\r\n            this._currentFilter = this.filter.filterDefinition;\r\n        }\r\n        else {\r\n            this.filter.defaultFilterType = FilterType.Both;\r\n            this._currentFilter = this._emptyFilter;\r\n        }\r\n    }\r\n\r\n    //Implementación \r\n    ngAfterViewInit() {\r\n        this.setFilterType();\r\n    }\r\n\r\n    initialized(sender: FlexGrid, args: any) {\r\n        var self = this;\r\n        //Agregar manejador para menú contextual        \r\n        sender.addEventListener(sender.hostElement, \"contextmenu\", (e: any) => {\r\n            let ht: HitTestInfo = sender.hitTest(e);\r\n            sender.select(new CellRange(ht.row, ht.col), true);\r\n            self.contextMenuOpen.next(self.currentItem);\r\n        });\r\n        //Manejo de doble click\r\n        sender.addEventListener(sender.hostElement, \"dblclick\", (e: any) => {\r\n            let ht: HitTestInfo = sender.hitTest(e);\r\n            if (ht.cellType == CellType.Cell) {\r\n                this.itemSelected.next(this.currentItem);\r\n            }\r\n        });\r\n        //Establecer el operador \"comienza con\" para todas cadenas\r\n        for (let i: number = 0; i < this.grid.columns.length; i++) {\r\n            let col: Column = this.grid.columns[i];\r\n            let colFilter: ColumnFilter = this.filter.getColumnFilter(col);\r\n            if (col.dataType == undefined || col.dataType == DataType.String) {                \r\n                colFilter.conditionFilter.condition1.operator = Operator.BW;\r\n            }            \r\n        }\r\n        //        \r\n        this.catalogView.currentChanged.addHandler((args: EventArgs) => {\r\n            let row: any = self.catalogView.currentItem;\r\n            if (row != null)\r\n                this.currentItem = { id: row.id, codigo: row.codigo, activo: row.activo, estatus: row.estatus, data: row };\r\n            else\r\n                this.currentItem = null;\r\n            //\r\n            self.currentItemChanged.next(self.currentItem);\r\n        }, self);\r\n\r\n    }\r\n\r\n    moveFirst() {        \r\n        if (this.serverSide)\r\n            this.createSearchRequest(0);\r\n        else {\r\n            this.catalogView.moveToFirstPage();\r\n            this.pageIndex = this.catalogView.pageIndex;\r\n        }\r\n    }\r\n\r\n    movePrevious() {        \r\n        if (this.serverSide)\r\n            this.createSearchRequest(this.pageIndex - 1);\r\n        else {\r\n            this.catalogView.moveToPreviousPage();\r\n            this.pageIndex = this.catalogView.pageIndex;\r\n        }\r\n    }\r\n\r\n    moveNext() {        \r\n        if (this.serverSide)\r\n            this.createSearchRequest(this.pageIndex + 1);\r\n        else {\r\n            this.catalogView.moveToNextPage();\r\n            this.pageIndex = this.catalogView.pageIndex;\r\n        }\r\n    }\r\n\r\n    moveLast() {\r\n        if (this.serverSide)\r\n            this.createSearchRequest(this.pageCount - 1);\r\n        else {\r\n            this.catalogView.moveToLastPage();\r\n            this.pageIndex = this.catalogView.pageIndex;\r\n        }\r\n    }\r\n\r\n    filterChanged(e: any, args: any) {        \r\n        if (this.serverSide) {\r\n            this._currentFilter = this.filter.filterDefinition;\r\n            this.createSearchRequest(0);\r\n        }\r\n        else {\r\n            this.pageIndex = 0;\r\n        }\r\n    }\r\n\r\n    sortChanged(sender: FlexGrid, args: CellRangeEventArgs) {\r\n        if (this.serverSide) {\r\n            let col: Column = sender.columns[args.col];\r\n            this._currentSortedColumn = args.col;\r\n            this._currentSortOrder = col.currentSort;            \r\n            this.createSearchRequest(this.pageIndex);            \r\n        }\r\n    }\r\n\r\n    createSearchRequest(pageIndex: number): SearchRequest {                \r\n        //Crear objeto con la representación del filtro actual del grid\r\n        let gridFilter = new GridFilter();\r\n        gridFilter.fromJSON(this._currentFilter);\r\n        //Crear search request a partir de los filtros y orden del grid\r\n        let request = new SearchRequest();\r\n        request.SetGridConditions(gridFilter);\r\n        request.pageIndex = pageIndex;\r\n        request.pageSize = this.pageSize;\r\n        request.paged = this.serverSide ? true : false;\r\n        //Iterar sobre las columnas del grid para determinar el orden\r\n        for (let i = 0; i < this.grid.columns.length; i++) {\r\n            let col: Column = this.grid.columns[i];\r\n            if (col.currentSort != null) {\r\n                let SortExp: SortOrder = new SortOrder();\r\n                SortExp.field = col.binding;\r\n                SortExp.direction = col.currentSort == \"+\" ? \"asc\" : \"desc\";\r\n                request.order.push(SortExp);\r\n            }\r\n        }\r\n        //\r\n        this.searchRequested.next(request);\r\n        return request;\r\n    }\r\n\r\n    menuItemClicked(menu: Menu, args: any) {\r\n        if (this.currentItem != null) {\r\n            let item: MenuItem = this.contextMenuItems[menu.selectedIndex];\r\n            this.contextMenuClick.next(item);\r\n        }\r\n    }\r\n}"]}