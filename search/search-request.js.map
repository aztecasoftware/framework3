{"version":3,"sources":["kernel/search/search-request.ts"],"names":[],"mappings":";AAEA;IAOI;QAJA,UAAK,GAAY,IAAI,CAAC;QAKlB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACtB,CAAC;IAED,yCAAiB,GAAjB,UAAkB,UAAsB;QAAxC,iBAUC;QATG,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM;YAC7B,IAAI,SAAS,GAAG,IAAI,eAAe,EAAE,CAAC;YACtC,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC;YACjC,SAAS,CAAC,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAClE,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC;YAC1C,SAAS,CAAC,SAAS,GAAG,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACjE,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,mCAAW,GAAnB,UAAoB,YAAoB;QACpC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACnB,KAAK,CAAC;gBACF,MAAM,CAAC,GAAG,CAAC;YACf,KAAK,CAAC;gBACF,MAAM,CAAC,IAAI,CAAC;YAChB,KAAK,CAAC;gBACF,MAAM,CAAC,GAAG,CAAC;YACf,KAAK,CAAC;gBACF,MAAM,CAAC,IAAI,CAAC;YAChB,KAAK,CAAC;gBACF,MAAM,CAAC,GAAG,CAAC;YACf,KAAK,CAAC;gBACF,MAAM,CAAC,IAAI,CAAC;YAChB,KAAK,CAAC;gBACF,MAAM,CAAC,QAAQ,CAAC;YACpB,KAAK,CAAC;gBACF,MAAM,CAAC,MAAM,CAAC;YAClB,KAAK,CAAC;gBACF,MAAM,CAAC,UAAU,CAAC;YACtB,KAAK,CAAC;gBACF,MAAM,CAAC,aAAa,CAAC;QAC7B,CAAC;IACL,CAAC;IAEO,oCAAY,GAApB,UAAqB,KAAU;QAC3B,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC;YAC1B,MAAM,CAAC,SAAS,CAAC;QACrB,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,SAAS,CAAC;YAChC,MAAM,CAAC,SAAS,CAAC;QACrB,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,MAAM,CAAC;YAC7B,MAAM,CAAC,UAAU,CAAC;QACtB,IAAI;YACA,MAAM,CAAC,QAAQ,CAAC;IACxB,CAAC;IACL,oBAAC;AAAD,CA7DA,AA6DC,IAAA;AA7DY,sCAAa;AA+D1B;IAAA;IAKA,CAAC;IAAD,sBAAC;AAAD,CALA,AAKC,IAAA;AALY,0CAAe;AAO5B;IAAA;IAGA,CAAC;IAAD,gBAAC;AAAD,CAHA,AAGC,IAAA;AAHY,8BAAS","file":"search-request.js","sourcesContent":["import { GridFilter } from '../utils/grid-filter';\r\n\r\nexport class SearchRequest {\r\n    conditions: SearchCondition[];\r\n    order: SortOrder[];\r\n    paged: boolean = true;\r\n    pageIndex: number;\r\n    pageSize: number;\r\n    \r\n    constructor() {\r\n        this.conditions = [];\r\n        this.order = [];\r\n        this.pageIndex = 1;\r\n        this.pageSize = 1;\r\n    }\r\n\r\n    SetGridConditions(gridFilter: GridFilter) {\r\n        this.conditions = [];\r\n        gridFilter.filters.forEach(filter => {\r\n            let condition = new SearchCondition();\r\n            condition.field = filter.binding;\r\n            condition.operator = this.getOperator(filter.condition1.operator);\r\n            condition.value = filter.condition1.value;\r\n            condition.valueType = this.getValueType(filter.condition1.value);\r\n            this.conditions.push(condition);\r\n        });\r\n    }\r\n\r\n    private getOperator(gridOperator: number): string {\r\n        switch (gridOperator) {\r\n            case 0:\r\n                return \"=\";\r\n            case 1:\r\n                return \"<>\";\r\n            case 2:\r\n                return \">\";\r\n            case 3:\r\n                return \">=\";\r\n            case 4:\r\n                return \"<\";\r\n            case 5:\r\n                return \"<=\";\r\n            case 6:\r\n                return \"STARTS\";\r\n            case 7:\r\n                return \"ENDS\";\r\n            case 8:\r\n                return \"CONTAINS\";\r\n            case 9:\r\n                return \"NOTCONTAINS\";\r\n        }\r\n    }\r\n\r\n    private getValueType(value: any): string {\r\n        if (typeof value === \"number\")\r\n            return \"decimal\";\r\n        else if (typeof value === \"boolean\")\r\n            return \"boolean\";\r\n        else if (typeof value === \"Date\")\r\n            return \"datetime\";\r\n        else\r\n            return \"string\";\r\n    }\r\n}\r\n\r\nexport class SearchCondition {\r\n    field: string;\r\n    operator: string;\r\n    value: any;\r\n    valueType: string;    \r\n}\r\n\r\nexport class SortOrder {\r\n    field: string;\r\n    direction: string;\r\n}"]}