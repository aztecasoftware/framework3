{"version":3,"sources":["kernel/utils/grid-filter.ts"],"names":[],"mappings":";AAAA;IAII;QACI,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,6BAAQ,GAAR,UAAS,IAAY;QACjB,IAAI,UAAU,GAAe,IAAI,CAAC,KAAK,CAAC,IAAI,CAAe,CAAC;QAC5D,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC,iBAAiB,CAAC;QACtD,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;IACtC,CAAC;IAED,2BAAM,GAAN;QACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IACL,iBAAC;AAAD,CAlBA,AAkBC,IAAA;AAlBY,gCAAU;AAoBvB;IAAA;IAMA,CAAC;IAAD,uBAAC;AAAD,CANA,AAMC,IAAA;AANY,4CAAgB;AAQ7B;IAAA;IAGA,CAAC;IAAD,0BAAC;AAAD,CAHA,AAGC,IAAA;AAHY,kDAAmB","file":"grid-filter.js","sourcesContent":["export class GridFilter {\r\n    defaultFilterType: number;\r\n    filters: GridColumnFilter[];\r\n\r\n    constructor() {\r\n        this.defaultFilterType = 3;\r\n        this.filters = [];\r\n    }\r\n\r\n    fromJSON(json: string) {\r\n        let jsonFilter: GridFilter = JSON.parse(json) as GridFilter;\r\n        this.defaultFilterType = jsonFilter.defaultFilterType;\r\n        this.filters = jsonFilter.filters;\r\n    }\r\n\r\n    toJSON(): string {\r\n        return JSON.stringify(this);\r\n    }\r\n}\r\n\r\nexport class GridColumnFilter {\r\n    binding: string;\r\n    type: string;\r\n    and: boolean;\r\n    condition1: GridFilterCondition;\r\n    condition2: GridFilterCondition;\r\n}\r\n\r\nexport class GridFilterCondition {\r\n    operator: number;\r\n    value: any;\r\n}"]}